/*
 * This file is generated by jOOQ.
 */
package com.swanpipe.jooq.rx.tables;


import com.swanpipe.jooq.rx.Indexes;
import com.swanpipe.jooq.rx.Keys;
import com.swanpipe.jooq.rx.Public;
import com.swanpipe.jooq.rx.tables.records.PersonaRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Persona extends TableImpl<PersonaRecord> {

    private static final long serialVersionUID = -1759530323;

    /**
     * The reference instance of <code>public.persona</code>
     */
    public static final Persona PERSONA = new Persona();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonaRecord> getRecordType() {
        return PersonaRecord.class;
    }

    /**
     * The column <code>public.persona.id</code>.
     */
    public final TableField<PersonaRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.persona.account_id</code>.
     */
    public final TableField<PersonaRecord, Integer> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.persona.display_name</code>.
     */
    public final TableField<PersonaRecord, String> DISPLAY_NAME = createField("display_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.persona.created</code>.
     */
    public final TableField<PersonaRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>public.persona</code> table reference
     */
    public Persona() {
        this(DSL.name("persona"), null);
    }

    /**
     * Create an aliased <code>public.persona</code> table reference
     */
    public Persona(String alias) {
        this(DSL.name(alias), PERSONA);
    }

    /**
     * Create an aliased <code>public.persona</code> table reference
     */
    public Persona(Name alias) {
        this(alias, PERSONA);
    }

    private Persona(Name alias, Table<PersonaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Persona(Name alias, Table<PersonaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Persona(Table<O> child, ForeignKey<O, PersonaRecord> key) {
        super(child, key, PERSONA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PERSONA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonaRecord> getPrimaryKey() {
        return Keys.PERSONA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonaRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonaRecord>>asList(Keys.PERSONA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonaRecord, ?>>asList(Keys.PERSONA__PERSONA_ACCOUNT_ID_FKEY);
    }

    public Account account() {
        return new Account(this, Keys.PERSONA__PERSONA_ACCOUNT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Persona as(String alias) {
        return new Persona(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Persona as(Name alias) {
        return new Persona(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Persona rename(String name) {
        return new Persona(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Persona rename(Name name) {
        return new Persona(name, null);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.swanpipe.jooq.rx.tables.daos;


import com.swanpipe.jooq.rx.tables.FlywaySchemaHistory;
import com.swanpipe.jooq.rx.tables.records.FlywaySchemaHistoryRecord;

import io.github.jklingsporn.vertx.jooq.shared.reactive.AbstractReactiveVertxDAO;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;


import io.reactivex.Single;
import java.util.Optional;
import io.github.jklingsporn.vertx.jooq.rx.reactivepg.ReactiveRXQueryExecutor;
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlywaySchemaHistoryDao extends AbstractReactiveVertxDAO<FlywaySchemaHistoryRecord, com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory, Integer, Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>>, Single<Optional<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>>, Single<Integer>, Single<Integer>> implements io.github.jklingsporn.vertx.jooq.rx.VertxDAO<FlywaySchemaHistoryRecord,com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory,Integer> {

    /**
     * @param configuration The Configuration used for rendering and query execution.
     * @param vertx the vertx instance
     */
    public FlywaySchemaHistoryDao(Configuration configuration, io.reactiverse.reactivex.pgclient.PgClient delegate) {
        super(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory.class, new ReactiveRXQueryExecutor<FlywaySchemaHistoryRecord,com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory,Integer>(configuration,delegate,com.swanpipe.jooq.rx.tables.mappers.RowMappers.getFlywaySchemaHistoryMapper()));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory object) {
        return object.getInstalledRank();
    }

    /**
     * Find records that have <code>version IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByVersion(List<String> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.VERSION.in(values));
    }

    /**
     * Find records that have <code>description IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByDescription(List<String> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.DESCRIPTION.in(values));
    }

    /**
     * Find records that have <code>type IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByType(List<String> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.TYPE.in(values));
    }

    /**
     * Find records that have <code>script IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByScript(List<String> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SCRIPT.in(values));
    }

    /**
     * Find records that have <code>checksum IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByChecksum(List<Integer> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.CHECKSUM.in(values));
    }

    /**
     * Find records that have <code>installed_by IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByInstalledBy(List<String> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_BY.in(values));
    }

    /**
     * Find records that have <code>installed_on IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByInstalledOn(List<Timestamp> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_ON.in(values));
    }

    /**
     * Find records that have <code>execution_time IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyByExecutionTime(List<Integer> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.EXECUTION_TIME.in(values));
    }

    /**
     * Find records that have <code>success IN (values)</code> asynchronously
     */
    public Single<List<com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory>> findManyBySuccess(List<Boolean> values) {
        return findManyByCondition(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS.in(values));
    }

    @Override
    public ReactiveRXQueryExecutor<FlywaySchemaHistoryRecord,com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory,Integer> queryExecutor(){
        return (ReactiveRXQueryExecutor<FlywaySchemaHistoryRecord,com.swanpipe.jooq.rx.tables.pojos.FlywaySchemaHistory,Integer>) super.queryExecutor();
    }
}

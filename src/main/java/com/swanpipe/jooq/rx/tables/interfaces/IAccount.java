/*
 * This file is generated by jOOQ.
 */
package com.swanpipe.jooq.rx.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.sql.Timestamp;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IAccount extends VertxPojo, Serializable {

    /**
     * Setter for <code>public.account.id</code>.
     */
    public IAccount setId(Integer value);

    /**
     * Getter for <code>public.account.id</code>.
     */
    public Integer getId();

    /**
     * Setter for <code>public.account.enabled</code>.
     */
    public IAccount setEnabled(Boolean value);

    /**
     * Getter for <code>public.account.enabled</code>.
     */
    public Boolean getEnabled();

    /**
     * Setter for <code>public.account.created</code>.
     */
    public IAccount setCreated(Timestamp value);

    /**
     * Getter for <code>public.account.created</code>.
     */
    public Timestamp getCreated();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IAccount
     */
    public void from(com.swanpipe.jooq.rx.tables.interfaces.IAccount from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IAccount
     */
    public <E extends com.swanpipe.jooq.rx.tables.interfaces.IAccount> E into(E into);

    @Override
    public default IAccount fromJson(io.vertx.core.json.JsonObject json) {
        setId(json.getInteger("id"));
        setEnabled(json.getBoolean("enabled"));
        setCreated(Timestamp.from(OffsetDateTime.parse(json.getString("created")).toInstant()));
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("id",getId());
        json.put("enabled",getEnabled());
        json.put("created",OffsetDateTime.ofInstant(getCreated().toInstant(), ZoneOffset.UTC));
        return json;
    }

}
